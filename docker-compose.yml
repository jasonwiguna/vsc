version: '3.7'

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - onebox-network
    restart: unless-stopped
  frontend:
    container_name: frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website.entrypoints=http"
      - "traefik.http.routers.website.rule=Host(`web.vstream.asia`)"
      - "traefik.http.services.website.loadbalancer.server.port=8001"
    build:
      context: ./vsc-frontend
      dockerfile: website.dockerfile
    volumes:
      - ./vsc-frontend:/usr/src/app/vsc-frontend
      - /usr/src/app/vsc-frontend/node_modules/
    ports:
      - ${CLIENT_PORT}:3000
    command: yarn start
    env_file:
      - .env
    networks:
      - onebox-network
    depends_on:
      - backend
      - db
    restart: unless-stopped
  admin:
    container_name: admin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.entrypoints=http"
      - "traefik.http.routers.admin.rule=Host(`db.vstream.asia`) && (PathPrefix(`/admin`) || PathPrefix(`/_next`))"
      - "traefik.http.services.admin.loadbalancer.server.port=8002"
    build:
      context: ./vsc-admin
      dockerfile: admin.dockerfile
    volumes:
      - ./vsc-admin:/usr/src/app/vsc-admin
      - /usr/src/app/vsc-admin/node_modules/
    ports:
      - ${ADMIN_PORT}:3000
    command: yarn start
    env_file:
      - .env
    networks:
      - onebox-network
    depends_on:
      - backend
      - db
    restart: unless-stopped
  backend:
    container_name: backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.entrypoints=http"
      - "traefik.http.routers.backend.rule=Host(`db.vstream.asia`) && PathPrefix(`/backend`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8002"
    build:
      context: ./vsc-backend
      dockerfile: backend.dockerfile
      target: production
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:3000
      - 9229:9229
    command: npm run start:debug
    env_file:
      - .env
    networks:
      - onebox-network
    depends_on:
      - db
    restart: unless-stopped
  db:
    image: 'postgres:14.1-alpine'
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data-vsc
    networks:
      - onebox-network
networks:
  onebox-network:
volumes:
  pgdata:
  data:
  db:
    driver: local